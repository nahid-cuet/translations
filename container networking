কন্টেইনার নেটওয়ার্কিং

কন্টেইনার নেটওয়ার্কিং যতটা কঠিন মনে হয় তত কঠিন না । আমরা আজকে ট্রাই করব সিম্পল ভাবে কন্টেইনার নেটওয়ার্কিং বুঝতে । 

কন্টেইনার হচ্ছে কিছু রেস্ট্রিক্টেড এবং আইসোলেটেড লিনাক্স প্রসেস । আমরা দেখব সিঙ্গেল হোস্ট কন্টেইনার এর ক্ষেত্রে কিভাবে নেটওয়ার্ককে আইসোলেট করা যায় এবং কমিউনিকেশন করা যায় । 

আমরা লিনাক্স ডিস্ট্রো হিসেবে  vagrant centos 8 ইউজ করছি । 

Virtual Ethernet device (veth)

লিনাক্সে network stack বলতে বুঝায় নেটওয়ার্ক ডিভাইস, রাউটিং, আইপি টেবিল প্রটোকল এসবের সমষ্টি । 
লিনাক্সে root namespace 

আমরা নিচের কমান্ডে একটা কন্টেইনার তৈরী করে তার জন্য আলাদা একটা নেটওয়ার্ক স্ট্যাক তৈরী করব ।  

inspect-net-stack.sh
#!/usr/bin/env bash
echo "> Network devices"
ip link

echo -e "\n> Route table"
ip route

echo -e "\n> Iptables rules"
iptables --list-rules
আইপি টেবিলটা একটু মডিফাই করি, 
$ sudo iptables -N ROOT_NS
এর পর আমাদের আউটপুট হলো এরকম,
$ sudo ./inspect-net-stack.sh
> Network devices
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
    link/ether 52:54:00:e3:27:77 brd ff:ff:ff:ff:ff:ff
> Route table
default via 10.0.2.2 dev eth0 proto dhcp metric 100
10.0.2.0/24 dev eth0 proto kernel scope link src 10.0.2.15 metric 100
> Iptables rules
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N ROOT_NS

কন্টেইনারকে আইসোলেট করতে লিনাক্সে ব্যবহৃত একটি নেমস্পেস হলো নেটওয়ার্ক নেমস্পেস । নেমস্পেস লজিক্যালি একটা নেটওয়ার্ক স্ট্যাক, যার নিজস্ব রাউটিং, ফায়ারওয়াল রুলস, নেটওয়ার্ক ডিভাইস থাকবে । টপিকটা সহজ রাখার জন্য আমরা শুধু এই নেমস্পেসটা নিয়েই কাজ করব। পুরোপুরি আইসোলেটেড কন্টেইনার না তৈরী করে আমরা শুধু এই নেটওয়ার্ক স্ট্যাকের মধ্যে স্কোপটা রেস্ট্রিক্ট করে রাখব ।
নেটওয়ার্ক নেমস্পেস তৈরী করে সেই সার্ভিস চালানোর জন্য কমান্ডগুলো হলো, 
$ sudo ip netns add netns0
$ ip netns
netns0

$ sudo nsenter --net=/var/run/netns/netns0 bash
# The newly created bash process lives in netns0

$ sudo ./inspect-net-stack.sh
> Network devices
1: lo: <LOOPBACK> mtu 65536 qdisc noop state DOWN mode DEFAULT group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00

> Route table

> Iptables rules
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT

এই আউটপুট থেকে বুঝতে পারি যে সদ্য তৈরী করা এই bash প্রসেসটা একটা নতুন নেটওয়ার্ক স্ট্যাক দেখতে পাচ্ছে, এবং সেটা নিয়ে কাজ করবে । এই স্ট্যাকে কোন রাউটিং, ফায়ারওয়াল এসব কিছু নেই । শুধু একটা লুপব্যাক আইপি দেয়া আছে । 


লিনাক্স মেশিনের ভেতরে মেইন বা রুট নেমস্পেস থাকবে, তার রাউটিং, ফায়ারওয়াল/আইপি টেবিল, নেটওয়ার্ক ডিভাইস ইত্যাদি থাকবে । এখন কন্টেইনারের জন্য নতুন যে নেমস্পেসটা তৈরী করলাম সেটার স্কোপ শুধু সেই কন্টেইনারের জন্য ফিক্সড করে দিয়েছি । এখন কন্টেইনারের ভেতরের প্রসেসগুলোর কাছে সেই নেমস্পেসটাই আসল, তারা শুধু সেই নেটওয়ার্ক স্ট্যাকই চিনবে ।

এখন কন্টেইনারের সাথে কমিউনিকেশন রেডী করতে হবে । লিনাক্সের একটা সার্ভিস/টুল হলো 
Virtual Ethernet device (veth) । এটা টানেলের মত কাজ করে, 

$ sudo ip link add veth0 type veth peer name ceth0

এই কমান্ড দিয়ে আমরা এক জোড়া ভার্চুয়াল ইথারনেট ডিভাইস তৈরী করলাম, জোড়া বলছি এজন্য যে দুটো ভার্চুয়াল ডিভাইসের একটা থাকবে root namespace এ আরেকটা থাকবে কন্টেইনারের জন্য ক্রিয়েট করা নেমস্পেস এ । 
$ ip link
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
    link/ether 52:54:00:e3:27:77 brd ff:ff:ff:ff:ff:ff
5: ceth0@veth0: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000
    link/ether 66:2d:24:e3:49:3f brd ff:ff:ff:ff:ff:ff
6: veth0@ceth0: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000
    link/ether 96:e8:de:1d:22:e0 brd ff:ff:ff:ff:ff:ff
বাই ডিফল্ট দুটো ইন্টারফেসই root namespace এ থাকবে । আমরা ceth0 ইন্টারফেসটা কন্টেইনারের নেমস্পেসে নিয়ে যাই । 

$ sudo ip link set ceth0 netns netns0

# List all the devices to make sure one of them disappeared from the root stack
$ ip link
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
    link/ether 52:54:00:e3:27:77 brd ff:ff:ff:ff:ff:ff
6: veth0@if5: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000
    link/ether 96:e8:de:1d:22:e0 brd ff:ff:ff:ff:ff:ff link-netns netns0


আমরা ডিভাইসগুলো চালু করে আইপি এডরেস ঠিকমত বসানোর পর এই দুই ইন্টারফেস একে অপরের সাথে কমিউনিকেট করতে পারবে । 
 
রুট নেমস্পেস থেকে শুরু করি, 

$ sudo ip link set veth0 up
$ sudo ip addr add 172.18.0.11/16 dev veth0

এখন কন্টেইনার নেমস্পেস থেকে দেখি 
$ sudo nsenter --net=/var/run/netns/netns0
$ ip link set lo up  # whoops
$ ip link set ceth0 up
$ ip addr add 172.18.0.10/16 dev ceth0
$ ip link
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
5: ceth0@if6: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000
    link/ether 66:2d:24:e3:49:3f brd ff:ff:ff:ff:ff:ff link-netnsid 0
এখানে দেখতে পাই যে ceth0  থেকে রুট নেমস্পেসের veth0 এর সাথে কমিউনিকেট করতে পারছে । 
সব ঠিকঠাক মত কাজ করছে কিনা দেখে নেই ,

# From `netns0`, ping root's veth0
$ ping -c 2 172.18.0.11
PING 172.18.0.11 (172.18.0.11) 56(84) bytes of data.
64 bytes from 172.18.0.11: icmp_seq=1 ttl=64 time=0.038 ms
64 bytes from 172.18.0.11: icmp_seq=2 ttl=64 time=0.040 ms

--- 172.18.0.11 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 58ms
rtt min/avg/max/mdev = 0.038/0.039/0.040/0.001 ms

# Leave `netns0`
$ exit

# From root namespace, ping ceth0
$ ping -c 2 172.18.0.10
PING 172.18.0.10 (172.18.0.10) 56(84) bytes of data.
64 bytes from 172.18.0.10: icmp_seq=1 ttl=64 time=0.073 ms
64 bytes from 172.18.0.10: icmp_seq=2 ttl=64 time=0.046 ms

--- 172.18.0.10 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 3ms
rtt min/avg/max/mdev = 0.046/0.059/0.073/0.015 ms

এখন ceth0 থেকে অন্য কোন রাউটিং এ প্যাকেট পাঠালে সেটা যাবে না । কারণ রাউটিং দেয়া নাই । 

# Inside root namespace
$ ip addr show dev eth0
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 52:54:00:e3:27:77 brd ff:ff:ff:ff:ff:ff
    inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic noprefixroute eth0
       valid_lft 84057sec preferred_lft 84057sec
    inet6 fe80::5054:ff:fee3:2777/64 scope link
       valid_lft forever preferred_lft forever

# Remember this 10.0.2.15

$ sudo nsenter --net=/var/run/netns/netns0

# Try host's eth0
$ ping 10.0.2.15
connect: Network is unreachable

# Try something from the Internet
$ ping 8.8.8.8
connect: Network is unreachable

# From `netns0` namespace:
$ ip route
172.18.0.0/16 dev ceth0 proto kernel scope link src 172.18.0.10

আমাদের নেমস্পেসের সাবনেট মাস্ক আর আইপি থেকে রাউটিং টেবিল আপডেট হয়েছে ।  172.18.0.10/16 নেটওয়ার্কে পাঠানো প্যাকেট এখন থেকে ceth0  হয়ে যাবে । অন্য বাকী সব প্যাকেট বাতিলের খাতায় চলে যাবে । একই ভাবে রুট নেমস্পেসেও একটা রাউটিং বসবে, 

# From `root` namespace:
$ ip route
# ... omitted lines ...
172.18.0.0/16 dev veth0 proto kernel scope link src 172.18.0.11


Bridge Network

ব্রীজ নেটওয়ার্ক ব্যবহার করব একাধিক কন্টেইনারের মধ্যে কমিউনিকেশন রেডী করার জন্য । কন্টেইনারের প্রধান goal হলো রিসোর্স যেন শেয়ারড ভাবে এফিশিয়েন্ট ভাবে ব্যবহার করা যায় । একটা হোস্টে মাল্টিপল কন্টেইনার থাকলে Virtual Ethernet device (veth) দিয়ে কাজ করতে গেলে সমস্যা হবে । আমরা নতুন একটা কন্টেইনার তৈরী করি । 

# From root namespace
$ sudo ip netns add netns1
$ sudo ip link add veth1 type veth peer name ceth1
$ sudo ip link set ceth1 netns netns1
$ sudo ip link set veth1 up
$ sudo ip addr add 172.18.0.21/16 dev veth1

$ sudo nsenter --net=/var/run/netns/netns1
$ ip link set lo up
$ ip link set ceth1 up
$ ip addr add 172.18.0.20/16 dev ceth1
কানেক্টিভিটি চেক করি, 

# From `netns1` we cannot reach the root namespace!
$ ping -c 2 172.18.0.21
PING 172.18.0.21 (172.18.0.21) 56(84) bytes of data.
From 172.18.0.20 icmp_seq=1 Destination Host Unreachable
From 172.18.0.20 icmp_seq=2 Destination Host Unreachable

--- 172.18.0.21 ping statistics ---
2 packets transmitted, 0 received, +2 errors, 100% packet loss, time 55ms
pipe 2

# But there is a route!
$ ip route
172.18.0.0/16 dev ceth1 proto kernel scope link src 172.18.0.20

# Leaving `netns1`
$ exit

# From root namespace we cannot reach the `netns1`
$ ping -c 2 172.18.0.20
PING 172.18.0.20 (172.18.0.20) 56(84) bytes of data.
From 172.18.0.11 icmp_seq=1 Destination Host Unreachable
From 172.18.0.11 icmp_seq=2 Destination Host Unreachable

--- 172.18.0.20 ping statistics ---
2 packets transmitted, 0 received, +2 errors, 100% packet loss, time 23ms
pipe 2

# From `netns0` we CAN reach `veth1`
$ sudo nsenter --net=/var/run/netns/netns0
$ ping -c 2 172.18.0.21
PING 172.18.0.21 (172.18.0.21) 56(84) bytes of data.
64 bytes from 172.18.0.21: icmp_seq=1 ttl=64 time=0.037 ms
64 bytes from 172.18.0.21: icmp_seq=2 ttl=64 time=0.046 ms

--- 172.18.0.21 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 33ms
rtt min/avg/max/mdev = 0.037/0.041/0.046/0.007 ms

# But we still cannot reach `netns1`
$ ping -c 2 172.18.0.20
PING 172.18.0.20 (172.18.0.20) 56(84) bytes of data.
From 172.18.0.10 icmp_seq=1 Destination Host Unreachable
From 172.18.0.10 icmp_seq=2 Destination Host Unreachable

--- 172.18.0.20 ping statistics ---
2 packets transmitted, 0 received, +2 errors, 100% packet loss, time 63ms
pipe 2
 
দেখা যাচ্ছে যে netns1 ঠিকমত কাজ করতে পারছে না । . এটা রুট নেমস্পেসের সাথে কমিউনিকেট করতে পারছে না, একইভাবে হোস্ট থেকে আমরা এটাতে কমিউনিকেট করতে পারছি না । এর কারণ হচ্ছে কারণ রাউটিং কনফ্লিক্ট করছে । 
$ ip route
# ... omitted lines ...
172.18.0.0/16 dev veth0 proto kernel scope link src 172.18.0.11
172.18.0.0/16 dev veth1 proto kernel scope link src 172.18.0.21
 
দুটো কন্টেইনার একই নেটওয়ার্কে আছে । 

