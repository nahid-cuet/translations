নেটওয়ার্ক

আমাদের প্রতিদিনের ব্যবহৃত বিভিন্ন ডিভাইস একে অপরের সাথে কানেক্ট হয়, আর সহজ কথায় এটাই নেটওয়ার্ক । নেটওয়ার্কের কয়েকটি কমন টার্ম আছে । আমরা এখানে ব্যবহার করব । যেমন হোস্ট, আইপি এডরেস, রাউটার, সুইচ, ব্রীজ ইত্যাদি । 

হোস্ট - 

হোস্ট হচ্ছে এন্ড পয়েন্ট ডিভাইস, নেটওয়ার্কে যেসকল ডিভাইস কানেক্ট থাকে, বা ইউজার লেভেলে যে সব ডিভাইস ইউজ করা হয় সেগুলো হলো হোস্ট । যেমন মোবাইল ফোন, ল্যাপটপ, ডেক্সটপ, সার্ভার, নেটওয়ার্ক প্রিন্টার ইত্যাদি । খেয়াল করলে দেখব এগুলো সবই কিন্তু এন্ড পয়েন্ট ডিভাইস, শেষ পর্যন্ত কোন না কোন ইউজার এগুলো ইউজ করছে । দুটো হোস্টের মধ্যে কমিউনিকেশন যখন হবে তখন কোন একটা হোস্ট রিকোয়েস্ট পাঠাবে, আরেকটা হোস্ট রিকোয়েস্ট রিসিভ করবে । যে রিকোয়েস্ট পাঠায় সে ক্লায়েন্ট হোস্ট আর যে রিসিভ করে সে সার্ভার হিসেবে কাজ করে সাধারনত । 

আইপি এডরেস - 

নেটওয়ার্কে অনেকগুলো নোড থাকে, নোড বলতে যেসব ডিভাইস নেটওয়ার্কে কানেক্টেড থাকে সেসব ডিভাইস । এখন প্রশ্ন হচ্ছে কমিউনিকেট করতে গিয়ে একটা নোড আরেকটা নোডকে কীভাবে চিনবে? আমাদের যেমন এক জায়গা থেকে আরেক জায়গায় যেতে একটা ঠিকানা লাগে তেমনি নেটওয়ার্কেও এক নোড থেকে আরেক নোডে যেতে একটা ঠিকানা লাগবে । নোডগুলোর এই ঠিকানা হলো আইপি এডরেস । আইপি এডরেস দেখতে/লিখতে এরকম 192.168.0.21 । এখানে নরমাল ডেসিমাল ফরম্যাটে লিখলেও আইপি এডরেস বেসিক্যালি বাইনারী কোড । একেকটা আইপি এডরেস ৩২ বিটের বাইনারী কোড । যেমন 11000000.10101000.00000000.00011001  মানে হলো আসলে 192.168.0.25 । দেখা যাচ্ছে প্রতি ৮টা বাইনারী ডিজিটের পর একটা করে ডট আছে । এরকম চার অক্টেট মিলে একটা আইপি এডরেস । ৮ টা অক্টেটে ১/০ মিলিয়ে ডেসিম্যালে কনভার্ট করলে 0-255 পর্যন্ত রেঞ্জ পাওয়া যাবে । কমিউনিকেশন এর সময় প্রতিটা প্যাকেটে সোর্স আইপি আর ডেস্টিনেশন আইপি থাকবে । আইপি এডরেস এর বিভিন্ন ক্লাস আছে, এছাড়াও আছে পাবলিক ও প্রাইভেট আইপি । 

রিপিটার

একটা নেটওয়ার্কে যখন একটা হোস্ট থেকে আরেকটা হোস্টে প্যাকেট যায় তখন অনেক সময় দূরত্ব কিংবা ট্রান্সমিশন মিডিয়ার কারণে সিগন্যাল দুর্বল হয়ে পড়তে পারে, এক্ষেত্রে রিপিটার ব্যবহার করা হয় । রিপিটার সিগন্যালকে বুস্ট করে, যার ফলে কমিউনিকেশন স্টেবল থাকে । 

হাব 

অনেক সময় একটা সিনারিও থাকে যেখানে অনেকগুলো হোস্ট একে অপরের সাথে কানেক্টেড থাকবে, যে হোস্টের যার সাথে কমিউনিকেট করা প্রয়োজন সে ওইভাবে কমিউনিকেট করবে । হাব এমন একটা ডিভাইস যেটার অনেকগুলো পোর্ট থাকে, প্রত্যেক পোর্টে একেকটা হোস্ট লাগানো থাকে । হাব, কোন সোর্স থেকে প্যাকেট আসলে তার সাথে কানেক্টেড সব হোস্টে সেই প্যাকেট ফরওয়ার্ড করে দেয় । হাব নেটওয়ার্কের কানেক্টিভিটি সিম্পল করে, কিন্তু যেহেতু এটি কোন পোর্টে কোন আইপি এডরেস আছে সেটা জানে না, তাই নেটওয়ার্ক কমিউনিকেশন আইসোলেট করতে পারে না । 




ব্রীজ

ব্রীজে দুটো পোর্ট থাকে, একেকটা পোর্টে একেকটা হাব এর মাধ্যমে একেকটা নেটওয়ার্ক লাগানো থাকে । ব্রীজ এটা ডিসাইড করতে পারে যে তার কোন পোর্টে কোন নেটওয়ার্ক কানেক্টেড । কোন প্যাকেট ব্রীজে আসলে সে সেইভাবে চেক করে, এবং ব্রীজের যেই পাশের নেটওয়ার্কে ডেস্টিনেশন আইপি আছে সেই নেটওয়ার্কে প্যাকেট ফরোয়ার্ড করে দেয় । ব্রীজ নেটওয়ার্ক পুরোপুরি আইসোলেট করতে পারে না । 

সুইচ

সুইচ ব্রীজ আর হাবের কম্বিনেশন । সুইচ এ অনেকগুলো পোর্ট থাকে, প্রতিটা পোর্টে কোন হোস্ট কানেক্টেড সেটা সুইচ স্টোর করে রাখে । কোন প্যাকেট সুইচ এ আসলে সে পোর্ট চেক করে শুধুমাত্র সেই ডেস্টিনেশন পোর্টে পাঠায় । 

রাউটার

রাউটার সাধারণত সরাসরি হোস্টের সাথে কানেক্টেড থাকে না, এটি অন্য রাউটার কিংবা সুইচের সাথে কানেক্টেড থাকে । রাউটার আসলে প্যাকেট ফরোয়ার্ড করে, সাথে রাউটিং ও করে, মানে কোন রাউট ধরে প্যাকেটটা সহজে ডেস্টিনেশনে পৌছাতে পারবে সেটা ডিসাইড করে । 


OSI লেয়ার

আমরা এখন যেটা নিয়ে আলোচনা করব সেটা হলো OSI লেয়ার। আমরা যদি ইংরেজি শিখতে চাই তাহলে আমাদের কিছু গ্রামারের রুলস জানতে হবে, রুলস ঠিকমত না জানলে আমরা অন্য কারও সাথে কথা বলতে পারব না ইংরেজিতে।  তেমনি নেটওয়ার্কিং এর রুলস সেট হলো OSI মডেল । এ মডেলে ৭টি লেয়ার আছে । 

Layer 7. The application layer
Layer 6. The presentation layer
Layer 5. The session layer
Layer 4. The transport layer
Layer 3. The network layer
Layer 2. The data-link layer
Layer 1. The physical layer

আমরা শুরু করার আগে একটু বলে নেই, একটা সাকসেসফুল নেটওয়ার্ক কানেকশন স্টাবলিশড করার জন্য আমরা পুরো জিনিসটাকে তিনটা মাইক্রো মডিউলে ভাগ করি, তাহলে বুঝতে সুবিধা হবে । 

Hop to Hop
End to End
Service to Service

জিনিসগুলো পড়তে পড়তে এক্সপ্লেইন করব, এখন লেয়ার ১ থেকে শুরু করি । নেটওয়ার্কিং এর মূল গোল হলো একটা হোস্ট থেকে অন্য হোস্টে ডাটা পাঠানো । এই ৭ টা লেয়ারের প্রতিটার আলাদা কিছু কাজ আছে। সব লেয়ারের কাজ ঠিকমত হলে কানেকশন ঠিকমত হবে । 

Layer 1. The physical layer 

ফিজিক্যাল শুনলে প্রথমে মাথায় আসে বস্তুগত কোন জিনিস, যেটা চোখে দেখতে পাই, ধরতে পারি । তাহলে নেটওয়ার্কিং এর ক্ষেত্রে কী হবে? এখানে ফিজিক্যাল লেয়ার বলতে আমরা বুঝব যে মাধ্যম দিয়ে ডাটা টা যাবে । যেমন, অপটিক্যাল ফাইবার, টুইস্টেড পেয়ার ক্যাবল । এ ধরনের ক্যাবল দিয়ে সরাসরি ডাটা 1/0 বিট আকারে এক হোস্ট থেকে অন্য হোস্টে যাবে । এখানে বলে রাখা ভাল, ওয়াই ফাই লেয়ার ১ এ কাজ করে । আসলে এই মডেলের প্রচলন যখন হয় তখনও ওয়াই ফাই চালু হয় নি । তাই ওয়ারলেস মিডিয়াম এর কথা তখন মাথায় আসে নি । আসলে এটাও লেয়ার ১ এলিমেন্ট । রিপিটার লেয়ার ১ ডিভাইস, কারণ রিপিটার আসলে সিগন্যালটা একটু বুস্ট করে । এখানে আর কোন জটিল কাজ হয় না । 

Layer 2. The data-link layer

আগের লেয়ারে দেখলাম যে কোন একটা মিডিয়াম ধরে ডাটা যাবে । এখন হোস্ট/নোডের যে অংশটা এই মিডিয়ামের সাথে কানেক্ট হবে সেটা হলো  data-link layer । তাহলে দেখা যাচ্ছে, আমাদের পিসির নেটওয়ার্ক ইন্টারফেস কিংবা ওয়াইফাই কার্ড হলো এই লেয়ার ২ ডিভাইস । এখন একটা সিনারিও চিন্তা করি, একটা হোস্ট আছে A এটার একটা ম্যাক এডরেস আছে  aa:2e । ম্যাক এডরেস কী সেটায় একটু পরে আসছি । আরেকটা হোস্ট আছে  B তার ম্যাক হলো  cc:2d । এখন আমাদের A  থেকে B তে একটা ডাটা পাঠাতে হবে । তাহলে আমরা একটা টুইস্টেড পেয়ার ক্যাবল নেই, দুই মাথা দুই হোস্টে লাগাই । এই যে একটা পোর্টে ক্যাবলটা লাগানো হলো, এই পোর্টটা হলো ডাটা লিংক লেয়ারের এলিমেন্ট । এই পোর্টকে গোটা নেটওয়ার্কে চেনার জন্য একটা ইনফরমেশন ইউজ করা হয়, সেটা হলো ম্যাক এডরেস । এটা একটা ৪৮ বিটের একটা নাম্বার। ১২টা ডিজিট হেক্সাডেসিমেল নোটেশনে থাকে । যেমন 00:00:5e:00:53:af । এই ম্যাক এডরেস প্রতিটা পোর্টের জন্য ইউনিক । দুনিয়াতে যত হার্ডওয়ার বানানো হয়, এবং তাতে যত পোর্ট বসে সবগুলোর ইউনিক ম্যাক থাকে । আমরা এখানে সংক্ষেপে শেষ চার ডিজিট নিয়ে কাজ করব । আচ্ছা, এখন বিশাল নেটওয়ার্কে A  কে চেনার জন্য ম্যাক হলো aa:2e, তো যখন ডাটা A  থেকে বের হবে B  তে যাওয়ার জন্য সে  B  এর ম্যাক নিয়ে বের হবে, তারপর দেখবে যে পরের HOP এ B  এর ম্যাক টা আছে, সেখানে প্যাকেটটা চলে যাবে । যদি এখন এই কানেকশনের মাঝে আমরা দুটো সুইচ বসিয়ে দেই? তাহলে সিনারিওটা কী হবে? আসলে পুরো প্রসেসটা একই থাকে, তবে প্যাকেটটা ট্রান্সফার হবে HOP  থেকে HOP  এ । মানে প্রথমে ডাটা  A  থেকে প্রথম সুইচ S1 এর ম্যাক ac:2w এ আসবে । সেখান থেকে  পরের সুইচ S2 এর ম্যাক ff:00  তে আসবে । সব শেষে সেখান থেকে B তে পৌছাবে । এজন্য আমরা লেয়ার ২ কে বলছি Hop to Hop কানেকশন । 

Layer 3. The network layer

দেখা যাচ্ছে লেয়ার ২ Hop to Hop কানেকশন এনসিউর করছে, তাহলে আমাদের সোর্স থেকে ডেস্টিনেশনে ঠিকমত ডাটা যাচ্ছে কিনা সেটা এনসিউর কীভাবে হবে? এখানে মাঠে নামলো লেয়ার ৩ । আমরা বলব, End to End কানেকশন । লেয়ার ২ যেমন ম্যাক এডরেস নিয়ে কাজ করে, তেমনি লেয়ার ৩ আলাদা সিস্টেম আছে, এটাকে বলছি আইপি এডরেস । আইপি এডরেস ৩২ বিটের। ৪টা অক্টেট থাকে ।  এখন সোর্স থেকে যখন ডাটা রওনা দিবে তার কাছে সোর্সের আইপি এড্রেস এবং ডেস্টিনেশন আইপি অ্যাড্রেস  থাকবে ।  প্রতিটা প্যাকেটের উপর লেয়ার ২ এর ম্যাক এড্রেস আর লেয়ার-থ্রি এর জন্য আইপি অ্যাড্রেস বসানো থাকবে ।  তাহলে আগের সিনারিওতে ফেরত যাই,  এ থেকে যখন প্যাকেট বের হচ্ছে পরের Hop  এর ম্যাক এবং  B  এর আইপি অ্যাড্রেস বসানো আছে ।  প্যাকেট যখন সুইচ S1 এ আসলো তখন আগের ডেস্টিনেশন Hop   এর ম্যাক মুছে গিয়ে নতুন Hop  এর ম্যাক বসবে, অর্থাৎ ac:2w এর জায়গায় ff:00 বসবে । এভাবে পরের Hop  হয়ে যখন B এর cc:2d  তে আসবে, তখন দেখা যাবে  ডেস্টিনেশন আইপি অ্যাড্রেস  হচ্ছে এই B  নোডে । তখন প্যাকেট অন্যান্য লেয়ার ধরে সার্ভ হবে ।   তাহলে দেখতে পাচ্ছি  আইপি এড্রেস কনফার্ম করতেছে যে  যে আমাদের  ডেস্টিনেশন  হোস্টেই যেন প্যাকেট ফরোয়ার্ড হয় । এই কানেক্টিভিটিতে আমরা রাউটার বসাতে পারি,  রাউটার একটা লেয়ার ৩ ডিভাইস।  রাউটার তার সাথে কানেক্টেড নেটওয়ার্কের নোড গুলোর আইপি নোট করে রাখে, এবং কোন প্যাকেট আসলে সে অনুযায়ী প্যাকেট ফরোয়ার্ড করে।  এ ছাড়া লেয়ার ২ আর ৩ এর মাঝে ARP প্রটোকল ব্যবহার করা হয় 
 সেটা অন্য আলোচনা। 




Layer 4. The transport layer

আমরা দেখলাম একটা প্যাকেট নির্দিষ্ট ডেসটিনেশন এ পাঠানোর জন্য আইপি আর ম্যাক নিয়ে রাউটার, সুইচ কাজ করে।  কিন্তু এটা কিভাবে এনসিউর হবে যে আমার পাঠানো প্যাকেটটা যে সার্ভিসের জন্য পাঠানো হয়েছে সেই সার্ভিসই পাবে শুধু? 

সার্ভিস কী? নেটওয়ার্ক এ সার্ভিস বলতে বুঝব একটা স্পেসিফিক টাস্ক। যেমন আমরা ইন্টারনেটের চ্যাট বক্সে কথা বলতে পারি, এই চ্যাটিং একটা সার্ভিস।  আবার একটা ফোরামে আর্টিকেল পড়লে সেটা আরেকটা সার্ভিস।  এখন কোন প্যাকেট চ্যাট বক্সে যাবে আর কোন প্যাকেট ফোরামে যাবে সেটা কিভাবে ঠিক হবে? এ জায়গায় নতুন যে কাজটা হবে সেটা হলো পোর্ট।  প্রটোকল অনুযায়ী TCP তে প্রায় ৬৫০০০ UDP তে প্রায় ৬৫০০০ পোর্ট আছে।  একটা প্যাকেট যখন ক্লায়েন্ট হোস্ট থেকে বের হচ্ছে তার আইপি, ম্যাক এসবের সাথে হোস্ট ওএস একটা Random পোর্ট assign করে, তেমনি ডেসটিনেশন সার্ভিস এর পোর্টটা বসিয়ে দেয়,   তাতে লেয়ার ৪ এ ট্রান্সপোর্ট লেয়ার বুঝতে পারে কোন সার্ভিস এর জন্য প্যাকেটটা পাঠানো হয়েছে।  

Layer 7. The application layer
Layer 6. The presentation layer
Layer 5. The session layer

এই তিনটা লেয়ার একসময় আলাদা আলাদা কাজ করলেও বর্তমানে এদের পার্থক্য তেমন নেই । আমরা একসাথে আলোচনা করি এই তিনটা লেয়ার । 
এ তিনটা লেয়ার বেসিক্যালি এনক্যাপসুলেশন করে একটা প্যাকেট । প্রতিটা প্যাকেটে আইপি, ম্যাক, পোর্ট এগুলো ঠিকমত বসানো হয়, তারপর ডাটা প্যাকেট ডেস্টিনেশন হোস্টে আসলে সেখানে এই তিন লেয়ার আবার লেয়ার অনুযায়ী সব ডি-ক্যাপসুলেট করে ইউজারের কাছে ডাটা টা তুলে ধরে । 

একটা হোস্ট কিভাবে ইন্টারনেটে কানেক্ট হয়

আমরা এখন দেখি, একটা হোস্ট কিভাবে অন্য আরেকটা হোস্টে ডাটা পাঠাবে । আমরা দুটো সিনারিও নেই, একটা হলো হোস্ট A হোস্ট B এর সাথে সরাসরি কানেক্টেড, আরেকটায় তাদের মাঝে রাউটার আছে । 



হোস্ট A হোস্ট B  একই নেটওয়ার্কে আছে । হোস্ট A এখন B কে একটা প্যাকেট পাঠাতে চায়  । ধরে নিলাম A এর কাছে B  এর আইপি আছে, তবে ম্যাক অ্যাডরেস নাই । এখন প্রথমে ডাটা পাঠানোর জন্য প্যাকেটে A একটা লেয়ার ৩ হেডার যোগ করে । তাতে সোর্স আইপি আর ডেস্টিনেশন আইপি দেয়া আছে । এই হেডার এন্ড টু এন্ড কানেকশন এনসিউর করছে । এখন হপ টু হপ কানেকশন এর জন্য একটা লেয়ার ২ হেডার যোগ করা দরকার, সমস্যা হলো  A এর কাছে  B  এর ম্যাক নেই । এ সমস্যা সমাধানের জন্য A একটা ARP হেডার ব্রডকাস্ট করে, ARP হলো অ্যাডরেস রেজুলেশন প্রটোকল । এর কাজ হলো একটা হোস্টে একটা টেবিল মেইনটেইন করা, এই টেবিলে পরিচিত আইপির সাথে ডেজিগনেটেড ম্যাক গুলো থাকে । এখন A এর কাছে যেহেতু B এর ম্যাক নেই তাই সে ব্রডকাস্ট করে, তার নেটওয়ার্কের সবার কাছে জানতে চায় ভাই, কার কাছে 10.33.13.3 আইপি আছে । যখন B এই মেসেজটা পায় সে প্রথমেই তার নিজের ARP ক্যাশ আপডেট করে নেয়, সেখানে 10.33.13.1 এর জন্য ম্যাক এন্ট্রি হয় । তারপর সে একটা ইউনিকাস্ট করে A কে জানায় যে সেই কাঙ্খিত হোস্ট ।  A  তখন B  এর ম্যাক পেয়ে সেটা আপডেট করে নেয় । তারপর নরমালি ডাটা প্যাকেটে লেয়ার ২ হেডার যোগ করে । তারপর প্যাকেট ঠিকমত পৌছে যায় B  এর কাছে । 



আচ্ছা, এবার ধরি A আর  B আলাদা নেটওয়ার্কে আছে । মানে এদের কানেকশন এর মাঝে একটা রাউটার আছে । এখন প্যাকেট কিভাবে  A থেকে B  তে যাবে দেখি । আগের মতই ধরে নেই B এর ম্যাক জানা নেই, শুধু আইপি জানা আছে । তাহলে এখন A একটা প্যাকেটে ট্যাগ বসাবে, লেয়ার ৩ ট্যাগে থাকবে সোর্স আইপি আর ডেস্টিনেশন আইপি । লেয়ার ২ ট্যাগে তাহলে কী থাকবে? সেখানে বসবে সোর্স ম্যাক আর ডেস্টিনেশন ম্যাকের জায়গায় বসবে রাউটারের ম্যাক । এখন প্রশ্ন হলো A এর কাছে রাউটারের ম্যাক আসলো কীভাবে । A আসলে প্রথম সিনারিও এর মত ARP ট্যাগ ব্রডকাস্ট করে রাউটারের ম্যাক তার ARP  ক্যাশে আপডেট করে নিয়েছে, তাহলে আবার প্রশ্ন আসে রাউটারের আইপি A কোথায় পেল ARP ট্যাগ ব্রডকাস্ট করার জন্য । আসলে A কনফিগার করার সময় আমরা গেটওয়ে আইপি বসিয়েছি । এই গেটওয়ে আইপিই আসলে রাউটারের আইপি । তাই A ARP  ব্রডকাস্টিং করে রাউটারের ম্যাক জেনে নিয়েছে । এর পর B এর জন্য প্যাকেট পাঠানোর জন্য সে লেয়ার ৩ ট্যাগে সোর্স আইপি, আর ডেস্টিনেশন আইপি(B  এর আইপি) বসায়, লেয়ার ২ ট্যাগে বসে A এর ম্যাক, আর ডেস্টিনেশন ম্যাক হিসেবে বসে রাউটারের ম্যাক । প্যাকেট রাউটারের কাছে আসলে সে বাকী কাজ করবে । A এর কাজ এই নেক্সট হপ পর্যন্ত প্যাকেট পৌছে দেয়া । 

সুইচিং 



উপরের ছবিটা দেখি, একটা সুইচ আছে। তার চারটা পোর্টে চারটা হোস্ট আছে । প্রতিটা হোস্টের আইপি আর ম্যাক দেখতে পাচ্ছি । এখন ধরি A এ থেকে একটা প্যাকেট D  তে যাবে । A  এর কাছে D  এর ম্যাক  আছে  । এটা A আগেই ARP ট্যাগ ব্রডকাস্ট করে জেনে নিয়েছে । এখন যখন প্যাকেট সুইচে আসলো, তখন সুইচ প্রথমে যে কাজটা করে সেটাকে আমরা বলতে পারি শেখার কাজ । সুইচের এর কাছে একটা টেবিল থাকে, যেটা হলো ম্যাক এডরেস টেবিল । সুইচ এই টেবিলটা আপডেট করে সবসময় । যখন A  এর প্যাকেট আসে, সুইচ তার টেবিল আপডেট করে যে ১ নং পোর্টে ম্যাক পাচ্ছি aa:bb । যেহেতু ডেস্টিনেশন ম্যাক সুইচের কোন পোর্টে আছে সেটা সুইচ জানে না তাই সে এই প্যাকেটটা ডুপ্লিকেট করে ফ্লাডিং করে । ফ্লাডিং হলো সব পোর্টে প্যাকেট ফরোয়ার্ড করে দেয়া, শুধুমাত্র যে পোর্ট থেকে প্যাকেট আসছে সে পোর্ট বাদে । ফ্লাডিং করার পর C & B এই প্যাকেট গুলো ফেলে দিল, কারণ ডেস্টিনেশন ম্যাক তাদের না । শুধু D দেখল যে তার ম্যাক ডেস্টিনেশন ম্যাকের সাথে মিলে । সে প্যাকেট রিসিভ করে প্রসেস করে । এখন D  একটা রেসপন্স পাঠালে সুইচ আবার শিখে নিল যে 4 No port এ ম্যাক পাওয়া গেছে aa:cc  । আর এবার D  থেকে আসা প্যাকেটে ডেস্টিনেশন ম্যাক সুইচ আগেই জানে । তাই সে প্যাকেট ফ্লাডিং না করে শুধু ১ নং পোর্টে ফরোয়ার্ড করে দেয় । 



আরেকটা সিনারিও দেখি । এখানে দুটো সুইচ আছে । প্রথম সুইচের তিন পোর্টে যথাক্রমে A, C & SW02 কানেক্টেড আর সুইচ ২ তে তিন পোর্টে  B,D & SW01 কানেক্টেড ।  ধরি একটা প্যাকেট A  থেকে D তে যাবে । আগের মতই প্যাকেট সুইচ ১ এ আসলে সুইচ ১ তার Mac Address Table আপডেট করে নিবে যে  Port 1 - aa:bb । তারপর সে প্যাকেট ডুপ্লিকেট করে ফ্লাডিং করবে, প্যাকেট SW02  এর পোর্ট ৩ এ আসলো । SW02 তার Mac Address Table আপডেট করে নিবে যে  Port 3 - aa:bb । এখন ডেস্টিনেশন ম্যাক দেখে SW02 প্যাকেট আবার ফ্লাডিং করবে, এই ফ্লাডিং এর পর রিপ্লাই আসবে D থেকে, SW02 আবার তার Mac Address Table আপডেট করে নিবে যে  Port 2 - aa:cc । তারপর ডেস্টিনেশন দেখে প্যাকেট ফরোয়ার্ড করে দিবে পোর্ট ৩ তে । এবার SW01 তার Mac Address Table আপডেট করে নিবে যে  Port 3 - aa:cc । এভাবে করে ফ্লাডিং আর লার্নিং করে সুইচ তার কাজ করতে পারে । এখানে আরও অনেক সুইচ থাকলেও একই প্রসেস চলতো । 

রাউটিং 




রাউটার কিভাবে একটা প্যাকেট এক হোস্ট থেকে অন্য হোস্টে পাঠায় সেটা আমরা এখন একটু দেখি । উপরের ডায়াগ্রামে তিনটা আলাদা নেটওয়ার্ক আছে । তিন নেটওয়ার্কের মাঝে আছে ২ টা রাউটার । প্রতিটা নেটওয়ার্কে হোস্ট আর রাউটারের মাঝে সুইচ আছে, তবে সুইচ কিভাবে কাজ করে সেটা আমরা মোটামুটি বুঝতে পেরেছি, তাই এখানে সুইচটা বাদ দিয়েই ডায়াগ্রামটা রেডী করা । 
ধরি X হোস্ট থেকে  A হোস্টে একটা প্যাকেট যাবে ।  A দেখতে পেল যে এই ডেস্টিনেশন আইপিটা তার নিজের সাবনেটে না, সে তখন ডিফল্ট গেটওয়ে মানে রাউটারে ২ এ প্যাকেটটা ফরোয়ার্ড করে দিবে । রাউটার ২ একটা টেবিল মেইন টেইন করে, সেটার নাম রাউটিং টেবিল । এ রাউটিং টেবিলে রাউটারের সাথে যেসব নেটওয়ার্ক কানেক্টেড থাকে সেই ইনফরমেশন থাকে । রাউটার ২ এর টেবিলে ইনফরমেশন আছে এভাবে Port 1 - 10.15.2.x , Port 2 - 10.18.3.x । এখানে রাউটিং টেবিলে এই ইনফরমেশন গুলো এসেছে ডিরেক্টলি কানেক্টেড নেটওয়ার্ক হিসেবে । অন্য কোন ইনফরমেশন যেহেতু নেই তাই রাউটার ২ প্যাকেট পেয়ে সেটাকে ফেলে দিবে, কারণ 10.18.5.x নেটওয়ার্ক সে চেনে না । তো প্যাকেটটা ডেলিভারি করার জন্য আমাদের রাউটারে রাউটিং এন্ট্রি দিতে হবে, আমরা রাউটিং টেবিলে কনফিগার করব এই ভাবে যে যদি 10.18.5.x  এর জন্য কোন প্যাকেট আসে তো তাকে পোর্ট ২ এর 10.18.3.x এখানে ফরোয়ার্ড করে দাও । এই এন্ট্রিকে বলা হয় স্ট্যাটিক রাউটিং । মানে ম্যানুয়ালি কোন প্যাকেট কোথায় যাবে সেটা রাউটারে এই কনফিগারেশন বসিয়ে দেয়া । তবে সবসময় এই কাজ করাটা একটু কষ্টকর । এজন্য আরেকটা কাজ করা যায়, সেটা হলো ডায়নামিক রাউটিং । ডায়নামিক  রাউটিং মানে হলো রাউটারে এটা বলে দেয়া যে তোমার কাছে অন্য যেসব রাউটার এর ইনফো আছে তাদের রাউটিং টেবিল থেকে ইনফো কালেক্ট করে রাখো । ডায়নামিক রাউটিং এর অনেক ধরণের প্রটোকল আছে, সেগুলো নিয়ে অন্য কোন সময় আলোচনা হবে । 
এখন আরেকটু ডিটেইলস দেখি, কিভাবে একটা প্যাকেট X হোস্ট থেকে একটা প্যাকেট R এ যাবে, যখন X  থেকে প্যাকেটটা যাবে সে তখন একটা লেয়ার ৩ ট্যাগ বসায়, সোর্স আইপি আর ডেস্টিনেশন আইপি থাকে । যখন সে লেয়ার ২ ট্যাগ বসাতে চায় তখন একটু সমস্যা, তার কাছে ডেস্টিনেশন ম্যাক নেই । X তখন ARP Broadcast করে রাউটার/ডিফল্ট গেটওয়ের আইপি দিয়ে । রাউটার ২ এ ARP ট্যাগ পায়, সে রিপ্লাই দেয় এবং নিজের ARP টেবিল আপডেট করে নেয় যে পোর্ট ১ এ bb:11 MAC আছে । তারপর ডেস্টিনেশন আইপি দেখে রাউটার ২ তার রাউটিং টেবিল থেকে দেখে নেয় যে এই প্যাকেটটা পোর্ট ২ তে 10.18.3.x  এ ফরোয়ার্ড করতে হবে । তখন আবার একটা লেয়ার ২ ট্যাগ বসাতে হবে, রাউটার ২ আগের মতই ARP Broadcast  নেক্সট হপের ম্যাক জেনে নেয়। প্যাকেট তারপর চলে আসলো রাউটার ১ এর পোর্ট ১ এ । এই রাউটার আগের মত  ARP Broadcast  করে নেক্সট হপ মানে R  এর ম্যাক জেনে নেয়, এবং প্যাকেট ফরোয়ার্ড করে । R  প্যাকেট প্রসেস করে । এই পুরো পথে প্রতিটি হপ তার নিজের ARP টেবিল আপডেট করে নেয়, তাই যখন R  থেকে রেসপন্স যায় তাই আগের মত বেশী সময় লাগবে না । এখন হপগুলো জানে নেক্সট হপের ম্যাক কী । তাই প্যাকেট দ্রুত X  এ পৌছায় । এখানে বলে রাখা ভাল যে রাউটিং টেবিল আমরা আগে থেকেই কনফিগার করে রাখি, কিন্তু ARP টেবিল সময়ের সাথে সাথে আপডেট হয়, মানে নেটওয়ার্ক চালু হওয়ার সময় ARP টেবিল খালি থাকে। প্যাকেট চলাচলের সাথে ARP টেবিল আপডেট হয় । 


রাউটিং নিয়ে আরেকটু বলি, উপরের টপোলজিতে আমরা রাউটারগুলো লিনিয়ার ভাবে কানেক্টেড দেখতে পাচ্ছি,  মানে একটার পর একটা এভাবে।  বাস্তব সিনারিওতে রাউটার সাধারণত হায়ারারকি স্টাইলে বসানো থাকে।  এতে করে ম্যানেজ করা সহজ, কানেকশন মোটামুটি পুরো নেটওয়ার্কে একই রকম থাকে।  ধরি একটা কোম্পানির আইপি রেঞ্জ হলো 10.x.x.x।  এর অফিস দু জায়গায়, ঢাকা আর চট্টগ্রাম।  দুই জায়গায় তার আলাদা আইপি রেঞ্জ আছে, ঢাকায় 10.20.x.x,  চট্টগ্রামে 10.25.x.x।  প্রতি অফিস লোকেশনেই নানা ডিপার্টমেন্ট আছে সেই ডিপার্টমেন্ট অনুযায়ী আলাদা আইপি রেঞ্জ আছে, যেমন ঢাকায় তিনটা ডিপার্টমেন্টের আইপি রেঞ্জ  10.20.12.x, 10.20.14.x।  আর চট্টগ্রামের তিনটা ডিপার্টমেন্টর আইপি রেঞ্জ  10.20.16.x 10.25.12.x, 10.25.14.x,  10.25.16.x 

প্রতিটা ডিপার্টমেন্ট একটা রাউটারে কানেক্টেড থাকে, আবার সেই ডিপার্টমেন্টাল রাউটার লোকেশন এর সেন্ট্রাল রাউটারে কানেক্টেড।  দুই লোকেশন এর দুই রাউটার একে অপরের সাথে কানেক্টেড প্লাস ইন্টারনেটে কানেক্টেড।  এখন ঢাকার সেন্ট্রাল রাউটারের রাউটিং টেবিলটা দেখি, 

Port 1 - 10.20.12.x
Port 2 - 10.20.14.x
Port 3 - 10.20.16.x
Port 4 - 10.25.12.x
Port 4 - 10.25.14.x
Port 4 - 10.25.16.x 

এখন দেখা যাচ্ছে যে  Port 4 এ মাল্টিপল এন্ট্রি আছে, চট্টগ্রাম অফিসের যাই প্যাকেট আসুক সেগুলো পোর্ট ৪ দিয়ে যাবে, এখন যদি চট্টগ্রাম অফিসে আরও ডিপার্টমেন্ট যোগ হয় তাহলে ঢাকার সেন্ট্রাল রাউটারে আরও অনেক এন্ট্রি দিতে হবে।  কাজটা সহজ করে আমরা করতে পারি এরকম যে Port 4 10.25.x.x/16।  মানে বলে দেয়া যে কোন প্যাকেট আসলে প্রথম ১৬ ডিজিট যদি ম্যাচ করে তাহলে সেটা রাউটারের ৪ নং পোর্ট দিয়ে চট্টগ্রাম এর সেন্ট্রাল রাউটারে ফরোয়ার্ড করে দেয়া।  /16 দিয়ে এখানে প্রথম ১৬ ডিজিট বুঝায়।  এটা সাবনেটিং এর কনসেপ্ট।  এই যে আমরা রাউটিং টেবিল এর এন্ট্রি কমিয়ে এক লাইনে আনলাম এটাকে বলি রাউটার সামারাইজেশন।  
